{"version":3,"file":"static/js/827.7271a033.chunk.js","mappings":"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","sources":["webpack://hyper-bikes/./src/components/Bikes/Review.module.css?8586","components/Bikes/Review.jsx","services/review.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Review_error__76Zue\",\"form\":\"Review_form__JtYE-\"};","import { useEffect, useState, useRef } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Rating from '@mui/material/Rating';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport { useMediaQuery } from '@mui/material';\r\n\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from 'yup';\r\n\r\nimport styles from './Review.module.css'\r\n\r\nimport { httpAddReview, httpEditReview } from \"../../services/review\";\r\n\r\nimport Loader from \"../Utility/Loader\"\r\nimport Toaster from \"../Utility/Toaster\"\r\n\r\nconst owned = [\r\n    {\r\n        value: \"> 1 yr\",\r\n        label: \"> 1 yr\"\r\n    },\r\n    {\r\n        value: \"6 - 12 months\",\r\n        label: \"6 - 12 months\"\r\n    },\r\n    {\r\n        value: \"3 - 6 months\",\r\n        label: \"3 - 6 months\"\r\n    },\r\n    {\r\n        value: \"< 3 months\",\r\n        label: \"< 3 months\"\r\n    },\r\n    {\r\n        value: \"never owned\",\r\n        label: \"never owned\"\r\n    }\r\n]\r\n\r\nconst used = [\r\n    {\r\n        value: \"daily commute\",\r\n        label: \"Daily commute\"\r\n    },\r\n    {\r\n        value: \"occasional commute\",\r\n        label: \"Occasional commute\"\r\n    },\r\n    {\r\n        value: \"leisure rides\",\r\n        label: \"Leisure rides\"\r\n    },\r\n    {\r\n        value: \"tours\",\r\n        label: \"Tours\"\r\n    },\r\n    {\r\n        value: \"everything\",\r\n        label: \"Everything\"\r\n    }\r\n]\r\n\r\nconst ridden = [\r\n    {\r\n        value: \"< 5000 Km\",\r\n        label: \"< 5000 Km\"\r\n    },\r\n    {\r\n        value: \"5000-10000 Km\",\r\n        label:\"5000-10000 Km\"\r\n    },\r\n    {\r\n        value: \"10000-15000 Km\",\r\n        label: \"10000-15000 Km\"\r\n    },\r\n    {\r\n        value: \"> 15000 Km\",\r\n        label:\"> 15000 Km\"\r\n    }\r\n]\r\n\r\nconst CustomRadio = ({ formik, is700, controlLabel, name, options }) => {\r\n    return (\r\n        <FormControl\r\n            error={formik.touched[name] && formik.errors[name] ? true: false}\r\n            sx={{\r\n                mb: is700 ? '20px' : '25px'\r\n            }}\r\n        >\r\n          <FormLabel id={name}\r\n            sx={{\r\n                fontWeight: '600',\r\n                color: 'customBlack.main',\r\n                fontSize: is700 ? '.9rem' : '1rem'  \r\n            }}\r\n          >{controlLabel}</FormLabel>\r\n          <RadioGroup\r\n            row\r\n            aria-labelledby={name}\r\n            name={name}\r\n            value={formik.values[name]}\r\n            onChange={(e) => {\r\n                formik.setFieldValue(name, e.target.value).then(\r\n                    () => formik.handleBlur(e)\r\n                )\r\n            }}\r\n            sx={{\r\n                '& .MuiTypography-root': {\r\n                    fontSize: is700 ? '.9rem': '1rem'\r\n                }\r\n            }}\r\n          >\r\n            {\r\n                options.map(\r\n                    (obj, index) => (\r\n                        <FormControlLabel key={obj.value + index} value={obj.value} control={<Radio sx={{\r\n                            '& .MuiSvgIcon-root': {\r\n                                fontSize: is700 ? '1rem' : is700 ? '1rem' : '1.25rem'\r\n                            }\r\n                        }} />} label={obj.label} />\r\n                    )\r\n                )\r\n            }\r\n          </RadioGroup>\r\n          <FormHelperText\r\n            sx={{\r\n                color: 'customRed.main'\r\n            }}\r\n          >{formik.touched[name] && formik.errors[name]}</FormHelperText>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nconst Review = () => {\r\n    const location = useLocation();\r\n    const bikeID = location.pathname.split('/')[2]\r\n    const editReview = location.state?.review;\r\n\r\n    const titleRef = useRef();\r\n    const bodyRef = useRef();\r\n    const mileageRef = useRef();\r\n\r\n    const is700 = useMediaQuery('(max-width:700px)')\r\n    \r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            rating: editReview?.rating ? \r\n                        editReview.rating : 0,\r\n            title: editReview?.title ? \r\n                        editReview.title : '',\r\n            body: editReview?.body ? \r\n                        editReview.body : '',\r\n            owned: editReview?.data?.owned ? \r\n                        editReview.data.owned : '',\r\n            used: editReview?.data?.used ? \r\n                        editReview.data.used : '',\r\n            ridden: editReview?.data?.ridden ? \r\n                        editReview.data.ridden : '',\r\n            mileage:  editReview?.data?.mileage ? \r\n                        editReview.data.mileage : '',\r\n        },\r\n        validateOnChange: false,\r\n        validationSchema: yup.object().shape({\r\n            rating: yup\r\n                .number()\r\n                .typeError('Rating must be a number')\r\n                .positive('Rating must be a positive number')\r\n                .moreThan(0, 'Rating must be a value equal to or more than 1')\r\n                .lessThan(6, 'Rating must be a value equal to or less than 5')\r\n                .required('Rating is required'),\r\n            title: yup\r\n                .string('Title must be a string')\r\n                .required('Title is required'),\r\n            body: yup\r\n                .string('Body must be a string')\r\n                .required('Body is required')\r\n                .max(255, 'Body must be at most 255 characters'),\r\n            owned: yup\r\n                .string('Owned must be a string')\r\n                .required('Owned is required'),\r\n            used: yup\r\n                    .string('Must be a string')\r\n                    .required('Must be required'),\r\n            ridden: yup\r\n                    .string('Ridden must be a string')\r\n                    .required('Ridden is required'),\r\n            mileage: yup\r\n                    .number()\r\n                    .typeError('Mileage must be a number')\r\n                    .positive('Mileage must be a positive number')\r\n                    .required('Mileage is required')\r\n        }),\r\n        onSubmit: (values, {setSubmitting}) => {\r\n            setData(null)\r\n            setLoading(true)\r\n                // console.log({ ...values, bikeID })\r\n                \r\n                if (editReview) {\r\n                    httpEditReview({ ...values, bikeID })\r\n                        .then(\r\n                            data => {\r\n                                // console.log(data)\r\n                                setData(data)\r\n                            }\r\n                        )\r\n                        .finally(\r\n                            () => {\r\n                                setLoading(false)\r\n                                setSubmitting(false)\r\n                                setTimeout(() => {\r\n                                    navigate(-1)\r\n                                }, 1500)\r\n                            }\r\n                        )\r\n                } else {\r\n\r\n                    httpAddReview({ ...values, bikeID })\r\n                        .then(\r\n                            data => {\r\n                                // console.log(data)\r\n                                setData(data)\r\n                            }\r\n                        )\r\n                        .finally(\r\n                            () => {\r\n                                setLoading(false)\r\n                                setSubmitting(false)\r\n                                setTimeout(() => {\r\n                                    navigate(-1)\r\n                                }, 1500)\r\n                            }\r\n                        )\r\n                }\r\n\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0,0)\r\n        if ( editReview ) {\r\n            titleRef.current.lastChild.firstChild.value = editReview.title;\r\n            bodyRef.current.lastChild.firstChild.value = editReview.body;\r\n            mileageRef.current.lastChild.firstChild.value = editReview.data.mileage;\r\n            // console.log(titleRef.current.lastChild.firstChild.value)\r\n        }\r\n    }, [editReview])\r\n\r\n    console.count();\r\n\r\n    return (\r\n        <>\r\n        {\r\n            loading ?\r\n\r\n                <Loader />\r\n\r\n                :\r\n\r\n                <></>\r\n\r\n        }\r\n        {\r\n            !loading && data && data?.status === 'ERROR' ?\r\n                <Toaster timer={1500} type={\"error\"} message={data?.message} />\r\n                :\r\n                <></>\r\n        }\r\n        {\r\n            !loading && data && data?.status === 'SUCCESS' ?\r\n                <Toaster timer={1500} message={data?.message} />\r\n                :\r\n                <></>\r\n        }\r\n        <Box\r\n            sx={{\r\n                height: 'auto',\r\n                width: 'auto',\r\n                py: 10,\r\n                bgcolor: 'customBlack.light'\r\n            }}\r\n        >\r\n            <Paper\r\n                elevation={6}\r\n                sx={{\r\n                    bgcolor: 'customWhite.main',\r\n                    height: 'auto',\r\n                    width: { mobile: '90%', tablet: '400px',  laptop:'600px'},\r\n                    mx: 'auto',\r\n                    py: 10\r\n                }}\r\n            >\r\n                <Typography\r\n                    variant=\"h4\"\r\n                    component=\"p\"\r\n                    textAlign='center'\r\n                    sx={{\r\n                        fontWeight: '400',                            \r\n                        color: 'customBlack.main',\r\n                        fontSize: '1.8rem',\r\n                        ...(is700 && {\r\n                            fontSize: '1.5rem'\r\n                        }),\r\n                        '& span': {\r\n                            borderBottom: '2px solid #bc1024'\r\n                        }\r\n                    }}\r\n                >\r\n                    WRITE YOUR <span>REVIEW</span>\r\n                </Typography>\r\n                <Typography\r\n                    variant='subtitle2'\r\n                    textAlign='center'\r\n                    sx={{\r\n                        color: 'customBlack.main',\r\n                        pt: 5,\r\n                        width: { mobile: '200px', tablet: '300px'},\r\n                        mx: 'auto',\r\n                        fontSize: '.75rem'\r\n                    }}\r\n                >\r\n                    Consider looks & styling, performance, servicing experience, mileage etc. before you rate.\r\n                </Typography>\r\n                <form\r\n                    onSubmit={formik.handleSubmit}\r\n                    noValidate\r\n                    className={styles.form}\r\n                >\r\n                    {formik.touched.rating && formik.errors.rating ?\r\n                        <p className={styles.error} style={{ fontWeight: \"700\"}}>{formik.errors.rating}</p>\r\n                        :\r\n                        null\r\n                    }\r\n                    <Rating \r\n                        name='rating'\r\n                        id='rating'\r\n                        value={Number(formik.values.rating)}\r\n                        onChange={(e) => {\r\n                            formik.setFieldValue(\"rating\", e.target.value).then(\r\n                                () => formik.handleBlur(e)\r\n                            )\r\n                        }}\r\n                        // onBlur={formik.handleBlur}\r\n                        size={is700 ? 'medium' : 'large'}\r\n                        sx={{\r\n                            mb: 2\r\n                        }}\r\n                    />\r\n                    <CustomRadio \r\n                        formik={formik}\r\n                        is700={is700}\r\n                        controlLabel={\"How long have you owned this bike for ?\"}\r\n                        name={\"owned\"}\r\n                        options={owned}\r\n                    />\r\n                    <CustomRadio \r\n                        formik={formik}\r\n                        is700={is700}\r\n                        controlLabel={\"What do you use this bike for?\"}\r\n                        name={\"used\"}\r\n                        options={used}\r\n                    />\r\n                    <CustomRadio \r\n                        formik={formik}\r\n                        is700={is700}\r\n                        controlLabel={\"How much have you ridden this bike ?\"}\r\n                        name={\"ridden\"}\r\n                        options={ridden}\r\n                    />\r\n                    <TextField\r\n                        label='Title'\r\n                        type='text'\r\n                        sx={{\r\n                            marginBottom: `${is700 ? '20px' : '25px'}`\r\n                        }}\r\n                        id='title'\r\n                        size={is700? 'small' : 'medium'}\r\n                        ref={titleRef}\r\n                        fullWidth={true}\r\n                        onBlur={(e) => {\r\n                            formik.setFieldValue(\"title\", e.target.value).then(\r\n                                () => formik.handleBlur(e)\r\n                            )\r\n                        }}\r\n                        error={formik.touched.title && formik.errors.title ?\r\n                            true : false\r\n                        }\r\n                        helperText={formik.touched.title && formik.errors.title}\r\n                    />\r\n                    <TextField\r\n                        ref={bodyRef}\r\n                        id='body'\r\n                        label='Body'\r\n                        placeholder=\"Less than 255 chars\"\r\n                        type='text'\r\n                        size={is700? 'small' : 'medium'}\r\n                        multiline\r\n                        maxRows={4}\r\n                        fullWidth={true}\r\n                        onBlur={(e) => {\r\n                            formik.setFieldValue(\"body\", e.target.value).then(\r\n                                () => formik.handleBlur(e)\r\n                            )\r\n                        }}\r\n                        error={formik.touched.body && formik.errors.body ?\r\n                            true : false\r\n                        }\r\n                        helperText={formik.touched.body && formik.errors.body}\r\n                        sx={{\r\n                            marginBottom: `${is700 ? '20px' : '25px'}`\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        ref={mileageRef}\r\n                        id='mileage'\r\n                        label='Mileage'\r\n                        placeholder=\"Got mileage in Km\"\r\n                        type='number'\r\n                        size={is700? 'small' : 'medium'}\r\n                        fullWidth={true}\r\n                        onChange={(e) => {\r\n                            formik.setFieldValue(\"mileage\", e.target.value)\r\n                            // .then(\r\n                                // () => formik.handleBlur(e)\r\n                            // )\r\n                        }}\r\n                        onBlur={formik.handleBlur}\r\n                        error={formik.touched.mileage && formik.errors.mileage ?\r\n                            true : false\r\n                        }\r\n                        helperText={formik.touched.mileage && formik.errors.mileage}\r\n                        sx={{\r\n                            marginBottom: `${is700 ? '20px' : '25px'}`\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        // type='submit'\r\n                        onClick={() => {\r\n                            formik.validateForm().then(\r\n                                () => formik.submitForm()\r\n                            )\r\n                        }}\r\n                        disabled={formik.isSubmitting ? true : false}\r\n                        sx={{\r\n                            height: '40px',\r\n                            paddingX: 5,\r\n                            py: 2,\r\n                            width: 'auto',\r\n                            bgcolor: 'customBlack.main',\r\n                            color: 'customWhite.main',\r\n                            fontWeight: '600',\r\n                            ...(is700 && {\r\n                                fontSize: '0.75rem',\r\n                                height: '30px'\r\n                            }),\r\n                            '&:hover': {\r\n                                bgcolor: 'customRed.main'\r\n                            }\r\n                        }}\r\n                    >\r\n                        SUBMIT\r\n                    </Button>\r\n                </form>\r\n            </Paper>\r\n        </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Review;","import axios from 'axios'\r\n\r\nconst BASEURL = \"api\"\r\n\r\nexport const httpAddReview = async (body) => {\r\n    try {\r\n    const csrfURL = new URL(`${BASEURL}/csrf`, process.env.REACT_APP_API_URL)\r\n    const reviewURL = new URL(`${BASEURL}/review`, process.env.REACT_APP_API_URL)\r\n\r\n        const res = await axios.get(csrfURL.toString(), {withCredentials: true});\r\n        const csrfToken = res.data.csrfToken;\r\n\r\n        const response = await axios.post(reviewURL.toString(), {\r\n                                    _csrf: csrfToken,\r\n                                    ...body\r\n                        },\r\n                        {\r\n                            headers: {\r\n                                'Accept': \"application/json\",\r\n                                'Content-Type': \"application/json\"\r\n                            },\r\n                            withCredentials: true,\r\n                            mode: 'cors'\r\n                        });\r\n\r\n        const data = response.data;\r\n        return data;\r\n\r\n    } catch (e) {\r\n        // console.log(e)\r\n        \r\n        if (e.hasOwnProperty(\"response\")) {\r\n            if (e.response.hasOwnProperty(\"data\")) {\r\n                const data = e.response.data;\r\n                return data;\r\n            }\r\n        }\r\n\r\n        return {\r\n            status: \"Error\",\r\n            message: e.message\r\n        }\r\n    }\r\n}\r\n\r\nexport const httpEditReview = async (body) => {\r\n    try {\r\n    const csrfURL = new URL(`${BASEURL}/csrf`, process.env.REACT_APP_API_URL)\r\n    const reviewURL = new URL(`${BASEURL}/editreview`, process.env.REACT_APP_API_URL)\r\n\r\n        const res = await axios.get(csrfURL.toString(), {withCredentials: true});\r\n        const csrfToken = res.data.csrfToken;\r\n\r\n        const response = await axios.post(reviewURL.toString(), {\r\n                                    _csrf: csrfToken,\r\n                                    ...body\r\n                        },\r\n                        {\r\n                            headers: {\r\n                                'Accept': \"application/json\",\r\n                                'Content-Type': \"application/json\"\r\n                            },\r\n                            withCredentials: true,\r\n                            mode: 'cors'\r\n                        });\r\n\r\n        const data = response.data;\r\n        return data;\r\n\r\n    } catch (e) {\r\n        // console.log(e)\r\n        \r\n        if (e.hasOwnProperty(\"response\")) {\r\n            if (e.response.hasOwnProperty(\"data\")) {\r\n                const data = e.response.data;\r\n                return data;\r\n            }\r\n        }\r\n\r\n        return {\r\n            status: \"Error\",\r\n            message: e.message\r\n        }\r\n    }\r\n}\r\n\r\nexport const httpDeleteReview = async (bikeID) => {\r\n    try {\r\n    const csrfURL = new URL(`${BASEURL}/csrf`, process.env.REACT_APP_API_URL)\r\n    const reviewURL = new URL(`${BASEURL}/deletereview`, process.env.REACT_APP_API_URL)\r\n\r\n        const res = await axios.get(csrfURL.toString(), {withCredentials: true});\r\n        const csrfToken = res.data.csrfToken;\r\n\r\n        const response = await axios.post(reviewURL.toString(), {\r\n                                    _csrf: csrfToken,\r\n                                    bikeID\r\n                        },\r\n                        {\r\n                            headers: {\r\n                                'Accept': \"application/json\",\r\n                                'Content-Type': \"application/json\"\r\n                            },\r\n                            withCredentials: true,\r\n                            mode: 'cors'\r\n                        });\r\n\r\n        const data = response.data;\r\n        return data;\r\n\r\n    } catch (e) {\r\n        // console.log(e)\r\n        \r\n        if (e.hasOwnProperty(\"response\")) {\r\n            if (e.response.hasOwnProperty(\"data\")) {\r\n                const data = e.response.data;\r\n                return data;\r\n            }\r\n        }\r\n\r\n        return {\r\n            status: \"Error\",\r\n            message: e.message\r\n        }\r\n    }\r\n}"],"names":["owned","value","label","used","ridden","CustomRadio","formik","is700","controlLabel","name","options","FormControl","error","touched","errors","sx","mb","FormLabel","id","fontWeight","color","fontSize","RadioGroup","row","values","onChange","e","setFieldValue","target","then","handleBlur","map","obj","index","FormControlLabel","control","Radio","FormHelperText","location","useLocation","bikeID","pathname","split","editReview","state","review","titleRef","useRef","bodyRef","mileageRef","useMediaQuery","useState","data","setData","loading","setLoading","navigate","useNavigate","useFormik","initialValues","rating","title","body","mileage","validateOnChange","validationSchema","yup","shape","typeError","positive","moreThan","lessThan","required","max","onSubmit","setSubmitting","httpEditReview","finally","setTimeout","httpAddReview","useEffect","window","scrollTo","current","lastChild","firstChild","console","count","Loader","status","Toaster","timer","type","message","Box","height","width","py","bgcolor","Paper","elevation","mobile","tablet","laptop","mx","Typography","variant","component","textAlign","borderBottom","pt","handleSubmit","noValidate","className","styles","style","Rating","Number","size","TextField","marginBottom","ref","fullWidth","onBlur","helperText","placeholder","multiline","maxRows","Button","onClick","validateForm","submitForm","disabled","isSubmitting","paddingX","BASEURL","csrfURL","URL","process","reviewURL","axios","toString","withCredentials","res","csrfToken","_csrf","headers","mode","response","hasOwnProperty","httpDeleteReview"],"sourceRoot":""}